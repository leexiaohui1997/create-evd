services:
  mysql:
    image: mysql:8.0
    platform: linux/arm64/v8
    container_name: __APP_NAME__-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-demo}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_pass}
    ports:
      - '3306:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: __APP_NAME__-redis
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--requirepass", "${REDIS_PASSWORD:-redispass}"
    ]
    ports:
      - '6379:6379'
    volumes:
      - ./data/redis:/data
    restart: unless-stopped

  backend:
    image: node:20-alpine
    container_name: __APP_NAME__-backend
    working_dir: /app
    command: sh -c "corepack enable && pnpm install --prefer-offline --frozen-lockfile || pnpm install && pnpm dev"
    environment:
      NODE_ENV: development
      EGG_SERVER_ENV: local
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ${MYSQL_USER:-root}
      DB_PASSWORD: ${MYSQL_PASSWORD:-password}
      DB_NAME: ${MYSQL_DATABASE:-demo}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispass}
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - ./backend/.pnpm-store:/root/.pnpm-store
      - ./VERSION:/app/VERSION:ro
    expose:
      - '7001'
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    container_name: __APP_NAME__-frontend
    working_dir: /app
    command: sh -c "corepack enable && pnpm install --prefer-offline --frozen-lockfile || pnpm install && pnpm dev"
    environment:
      NODE_ENV: development
      VITE_API_TARGET: http://backend:7001
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - ./frontend/.pnpm-store:/root/.pnpm-store
    expose:
      - '5173'
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: __APP_NAME__-nginx
    depends_on:
      - backend
      - frontend
    ports:
      - '__DEV_PORT__:8080'
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  backend_node_modules:
  frontend_node_modules: