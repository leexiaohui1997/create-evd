services:
  mysql:
    image: mysql:8.0
    platform: linux/arm64/v8
    container_name: __APP_NAME__-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: __APP_NAME__-redis-prod
    command: [
      "redis-server",
      "--appendonly", "yes",
      "--requirepass", "${REDIS_PASSWORD}"
    ]
    volumes:
      - ./data/redis:/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: __APP_NAME__-backend:prod
    container_name: __APP_NAME__-backend-prod
    working_dir: /app/dist
    environment:
      NODE_ENV: production
      EGG_SERVER_ENV: prod
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    depends_on:
      - mysql
      - redis
    command: sh -c "npx egg-scripts start --title=egg-backend --port=7001 --baseDir=/app/dist"
    expose:
      - "7001"
    volumes:
      - ./VERSION:/app/dist/VERSION:ro
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:7001/api/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: __APP_NAME__-frontend:prod
    container_name: __APP_NAME__-frontend-prod
    depends_on:
      - backend
    command: sh -c "cp -r /app/dist/* /dist_out && ls -la /dist_out"
    volumes:
      - frontend_dist:/dist_out
    restart: 'no'

  nginx:
    image: nginx:alpine
    container_name: __APP_NAME__-nginx-prod
    depends_on:
      - backend
      - frontend
    ports:
      - '__PROD_PORT__:8080'
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_dist:/usr/share/nginx/html:ro
    restart: unless-stopped

volumes:
  frontend_dist: